## GAE初心者がGAE/Goやってみた

### 自己紹介

- BEやってる
- Goは2013年から、よく使っている
- Plan 9は2003年から使っている

### モチベーション

- もともとGoやってたので興味はあった
- Plan 9はコンソールをよく使うのでSSH接続のみはしんどい
  (リモートログインでは見えないファイルがある)
- GCEがシリアルコンソールに対応していたので
  Plan 9入れたら動いた(重要)

楽しい

- macOSのqemuではvirtio-scsiが使えない？
  bulkは使えるんだけど...
- イメージが作れない
- 少し頓挫、後でやる

### 最近まで

- Plan 9が動くなら本格的に使ってみるのもいい
- Google Cloudのブログを購読していた
- 割と新しいサービスとか更新の情報が流れる
  こんなのあるんだーくらいで読んでいた

### 7月

- 登壇しませんか
- あ、はい...

### 何を話すのか

- こんななので、各サービスの深い情報などは話せない
- 運用して困った話やあるあるネタも持ってない

なので

- 欲しかったサービスを実際に作ってみて、どうだったのかを話そうと思う

### サービス

こんなことありませんか

- 読んだことあるんだけど見つからない
  ブックマーク忘れ、当時はどうでもよかった、etc
- ブックマークする・しないの判断さえめんどくさい
- ページそのものがなくなってしまった

類似

- Google Search History
  Twitterとかから飛ぶ場合もあるし
- はてブなどのブックマーク
  もっと手軽なものがいい
  ブックマークにゴミ記事を混ぜたくない
- それぞれのサービスのストック
  QiitaとかMediumとか、横断で検索できないし
  これは書いた人へのリアクションとして必要だとは思うけど
- Pocket
  いちばん近い、けど未読ではない
  自分でボタン押したくない

### 仕様

- 読んだ記事を取捨選択せず全部保存する
- 読んだ中から全文検索する
- 時系列に読んだリストを取得する
- ユーザ毎に分けて管理する

### どのプラットフォームを使うか

- App Engine standard
- App Engine flexible
- Container Engine
- Compute Engine

運用はなるべくしたくなかった。
Compute Engine、Plan 9は趣味なので別としても、
自由度は高いし慣れているんだけど、
脆弱性とか負荷分散とか死活監視とかログとかデプロイとか面倒だった。

Container Engineとflexibleは、どうだろうな。
TODO: 比較があった気がする
制限は多そうだけどGoが使えるので、GAE/Goを使おうと思った。

### 認証どうする？

まずは初めてなので、認証どうしようかと考えた。

- Cloud Identity-Aware Proxy (Cloud IAP)
- Cloud Endpoints
- GAE/Go付属のuserパッケージ
- 自前実装

userパッケージが一番お手軽。app.yamlにlogin: requiredと書けばいいだけ。
なんだけど、これはGoogleアカウントにのみ対応みたいだった。
なるべくGitHubとかFacebookでログインしたい。

次にCloud IAP、これはアプリのフロントに存在するProxyで、
GCPのコンソールで設定するんだけど、Organization、個人、Googleアカウント全般しか
選ぶことができないみたいだった。
IAPは社内で使うアプリを安全に後悔するためのものかな、という印象。

自前でやるしかないならするけど、なるべく避けたいよね。

ということで最終的にはCloud Endpointsを使った。
もともとREST APIを作るためのサービスみたいなんだけど、
OAuth 2.0で認証することができるので、これを使うことにした。
github.com/GoogleCloudPlatform/go-endpoints/endpoints
にGoのパッケージがあって、標準だとGoogleアカウントのみ対応みたいだけど、
多分Authenticatorインターフェイスを実装すれば切り替えられると思う。

go-endpointsの便利なところは、REST APIを作るために必要なものが割と揃っている。

- 認証
- Validator
- URLルータ
- リクエストとレスポンスの構造体マッピング
- アクセスログ(勝手にやってくれる)
- クラッシュログ

### 作ってみよう

TODO: コード書く

### 開発サーバで実行

`goapp serve`、するとconflict with same file ...でエラーになる。
app.yaml以下には、他のパッケージからimportするものを置いてはいけないらしい。
別のリポジトリに分けてもいいけど面倒なので、app.yamlを別のディレクトリに分けた。

### 404...

go-endpointsのドキュメントに、localhost:8080/_ah/api/explorerでテストできるよと書いてあるけど、
なぜかgoapp 1.9.55では404になってしまった。

TODO

### 認証を入れる

TODO: コード書く

認証を有効にした
